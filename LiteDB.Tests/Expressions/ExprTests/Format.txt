# BsonExpression Unit Test

# Expression format
> _id
~ $._id
> a.b
~ $.a.b
> a[ *].c + 5
~ ($.a[*]=>@.c+5)
> a[ @ + 1 = @ + 2].b  = 9
~ ($.a[@+1=@+2]=>@.b=9)
> a.['a-b']
~ $.a.["a-b"]
> 'single "quote\' string'
~ "single \"quote' string"
> "double 'quote\" string"
~ "double 'quote\" string"
> {'a-b':1, "x+1": 2, 'y': 3}
~ {"a-b":1,"x+1":2,y:3}
> [1, 2 ,  { $guid : "826944a6-72ec-4fc0-a1bc-9fd9f846c266" }]
~ [1,2,{$guid:"826944a6-72ec-4fc0-a1bc-9fd9f846c266"}]

# And/Or
> 1 =  true   and false > "A"
~ 1=true AND false>"A"
> 1 < 1 or "two" = "two" or three > three
~ 1<1 OR "two"="two" OR $.three>$.three
> ( 1 + 2) = 3    and X  +  y = 9
~ (1+2)=3 AND $.X+$.y=9

# Methods
> SUBSTRING( "lite" + "db", -4, 1 + 9 )
~ SUBSTRING("lite"+"db",-4,1+9)

# Array
> [a,b, 1, true , [ null, { "x" : 99 }] ]
~ [$.a,$.b,1,true,[null,{x:99}]]

# Inner
> (10 * (1 + 2) - 5)
~ (10*(1+2)-5)

# Map
> names[length(@) > 10] => upper(@)
~ $.names[LENGTH(@)>10]=>UPPER(@)

# Path/Source-Map
> items[*].id + 1
~ ($.items[*]=>@.id+1)

## TODO para v2 BETA (até sexta)
- Revisar help do Shell - saiu varias coisas
- ThreadSafe
- Unit tests básicos
- Test script todos os comandos
- Merge para master
- Folder root: "src", "test", "nuget"
- Revisar site

## TODO para v2 RC (até 31/dez)
- Atualizar documentação
- Revisar site
- O problema de Max do AutoInc - Que tal uma sequence na collection? NextId()   
- Colocar <BsonDocument> DbParams na header. _engine.GetParams(), _engine.SetParams(p) (limit 4k)
- Unit tests melhorados
- Colocar documentação neste site
- Migrar unit tests para XUnit ou outro q funcione no ASPNET5

## TODO para v2.0 (até 31/jan)
- Revisar BsonArray.Length não faz cache
- New UserVersion. this.UserVersions(1, (db) => { .. })
- Migration tool? Shell.Import/Export?
- Implementar DbRefAttribute

//////////////////////////////////////////////////////////////////////////////////////////////////////


## Thread Safe / Process Safe
- Thread safe no BsonMapper static methods (Reflection)
- Lock total de read.
- Mesmo comandos de QUERY devem ter LOCK por causa do uso da CACHE (ou faço lock na cache?)            
- Revisar classes de servico/collection pra ver quais sao as variaveis de classe q mudam situacao (vide _cache)
- Avaliar uso do ConcurrentDictionary na cache

## FUTURE versions 2.x:

- DefaultIndexOptions? Ou sem default - não cria indice automaticamente - ou full search?
- Queria que o IDiskService não tivesse informações sobre Journal/Recovery
- Encrypt datafile (EncryptDiskService : FileDiskService)
- Que tal ter a possibilidade utilizar serializacao de terceiros (via JSON.NET)? IBsonMapper?
- PCL e ASPNET 5

## V2 Features
- New DbEngine
- IDiskService
- New DbRef
- Entity<> mapper
- ThreadSafe
- New lock read/write
- Debugger
- Better journal : restore before crash 
- ACID per document/collections
- Lazy load
* ByteArray, DbEngine, abstract BasePage
- FileLimit and Initial Size
